{"version":3,"sources":["js/actions/films.js","js/helpers/withFilmsData.js","js/components/common/sidebarFilms.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/classnames/index.js","js/components/editFilm/editFilm.js"],"names":["updateFilm","film","type","types","payload","fetchFilms","dispatch","axios","get","concat","process","then","result","films","data","Search","catch","err","error","response","Error","withFilmsData","countShowFilms","WrappedComponent","mapDispatchToProps","connect","state","slice","isFilmsLoading","errorLoadFilms","props","useEffect","length","react_default","a","createElement","className","role","Object","assign","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","SidebarFilms","_ref","baseUrl","map","key","imdbID","to","Title","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","_iterableToArrayLimit","TypeError","_nonIterableRest","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","inner","apply","call","join","module","exports","default","_useState","useState","_useState2","_home_sergey_Sites_react_gl_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","filmData","setFilm","_useState3","_useState4","isFilmNotFound","setIsFilmNotFound","_useState5","Year","_useState6","formErrors","setFormErrors","handleChangeForm","e","_e$target","target","name","id","find","_home_sergey_Sites_react_gl_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","findFilm","match","params","react__WEBPACK_IMPORTED_MODULE_2___default","onSubmit","preventDefault","history","htmlFor","onChange","is-invalid","style","marginRight","onClick","goBack","_common_sidebarFilms__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"static/js/5.f3926741.chunk.js","sourcesContent":["import * as types from '../constants/films';\nimport axios from 'axios';\n\nfunction requestFilms() {\n    return {\n        type: types.FETCH_FILMS_REQUEST\n    }\n}\nfunction requestFilmsSuccess( films ) {\n    return {\n        type: types.FETCH_FILMS_SUCCESS,\n        payload: films\n    }\n}\nfunction requestFilmsFailed( error ) {\n    return {\n        type: types.FETCH_FILMS_FAILED,\n        payload: error\n    }\n}\nexport function updateFilm( film ) {\n    return {\n        type: types.UPDATE_FILM,\n        payload: film\n    }\n}\nexport function fetchFilms() {\n    return dispatch => {\n        dispatch( requestFilms() );\n        return axios.get(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=game`)\n            .then( result => {\n                dispatch( requestFilmsSuccess( result.data.Search ) );\n            })\n            .catch( err => {\n                dispatch( requestFilmsFailed( err.response.data.Error ));\n            })\n    }\n}","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFilms, updateFilm } from '../actions/films';\n\nexport default function withFilmsData( countShowFilms ) {\n    return function (WrappedComponent) {\n        function WithFilmsData( props ) {\n            useEffect( () => {\n                if( props.films.length <= 0 ) props.fetchFilms();\n            }, []);\n            const { films, isFilmsLoading, errorLoadFilms, updateFilm } = props;\n            return (\n                <div className=\"row\">\n                    { isFilmsLoading && <div className=\"fa-2x spinner-absolute-center\"><i className=\"fas fa-spinner fa-spin\"/></div> }\n                    { errorLoadFilms && <div className=\"col-12\"><div className=\"alert alert-danger\" role=\"alert\">{ errorLoadFilms }</div></div>}\n                    { !isFilmsLoading &&\n                    <WrappedComponent\n                        { ...props }\n                        films={ films }\n                        updateFilm={updateFilm}/>\n                    }\n                </div>\n            )\n        }\n        WithFilmsData.propTypes = {\n            films: PropTypes.arrayOf(PropTypes.shape({\n                Poster: PropTypes.string.isRequired,\n                Title: PropTypes.string.isRequired,\n                Year: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.string\n                ]).isRequired\n            })),\n            isFilmsLoading: PropTypes.bool.isRequired,\n            errorLoadFilms: PropTypes.string\n        };\n        const mapStateToProps = state => {\n            let films = state.films.films;\n            if( countShowFilms ) films = films.slice(0, countShowFilms + 1);\n            return {\n                films,\n                isFilmsLoading: state.films.isFilmsLoading,\n                errorLoadFilms: state.films.errorLoadFilms\n            }\n        }\n        const mapDispatchToProps = {\n            fetchFilms,\n            updateFilm,\n        }\n        return connect(mapStateToProps, mapDispatchToProps)(WithFilmsData);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nfunction SidebarFilms ({ films, baseUrl }){\n    function handleMapFilms(film) {\n        return(\n            <li key={film.imdbID}>\n                <NavLink to={`${baseUrl}/${film.imdbID}`}>{ film.Title }</NavLink>\n            </li>\n        )\n    }\n    return (\n        <div className=\"col-md-4 sidebar-films\">\n            <h4 className=\"sidebar-films__title\">All films</h4>\n            <ul>\n                { films.map( handleMapFilms )}\n            </ul>\n        </div>\n    )\n}\nSidebarFilms.propTypes = {\n    baseUrl: PropTypes.string.isRequired,\n    films: PropTypes.arrayOf(PropTypes.shape({\n        Title: PropTypes.string.isRequired,\n        imdbID: PropTypes.string.isRequired\n    }))\n};\nexport default SidebarFilms;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData'\nimport classNames from \"classnames\";\nimport SidebarFilms from '../common/sidebarFilms';\n\nfunction EditFilm( props ) {\n    const [ filmData, setFilm ] = useState(null);\n    const [ isFilmNotFound, setIsFilmNotFound ] = useState(false);\n    const [ formErrors, setFormErrors ] = useState({ Title: null, Year: null });\n\n    useEffect( () => {\n        findFilm(props.match.params.id);\n    }, [ props.match.params.id ])\n\n    function findFilm ( id ) {\n        let { films } = props;\n        let filmData = films.find( film => film.imdbID === id );\n        setFilm( {...filmData } );\n        setIsFilmNotFound( !filmData );\n    }\n    function handleChangeForm (e){\n        let { name, value } = e.target;\n        if(!value) formErrors[name] = \"Field is required.\";\n        else formErrors[name] = null;\n        filmData[name] = value;\n        setFilm( filmData );\n        setFormErrors( formErrors );\n    }\n    function handleSubmitForm (e) {\n        e.preventDefault();\n        if( !formErrors.Title && !formErrors.Year ) {\n            props.updateFilm(filmData);\n            props.history.push('/dashboard');\n        }\n    }\n    function handleCloseForm () {\n        props.history.goBack();\n    }\n    return(\n        <div className=\"col-12\">\n            { isFilmNotFound && <div className=\"\"><div className=\"alert alert-danger\" role=\"alert\">Film not found.</div></div>}\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    {filmData &&\n                    <form onSubmit={handleSubmitForm}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input type=\"text\"\n                                   onChange={handleChangeForm}\n                                   value={filmData.Title}\n                                   className={classNames('form-control', {'is-invalid': formErrors.Title})}\n                                   name=\"Title\"\n                                   id=\"title\"/>\n                            {formErrors.Title && <div className=\"invalid-feedback\">{formErrors.Title}</div>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"year\">Year</label>\n                            <input type=\"text\"\n                                   onChange={handleChangeForm}\n                                   value={filmData.Year}\n                                   className={classNames('form-control', {'is-invalid': formErrors.Year})}\n                                   name=\"Year\"\n                                   id=\"year\"/>\n                            {formErrors.Year && <div className=\"invalid-feedback\">{formErrors.Year}</div>}\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\" style={{marginRight: '10px'}}>Save</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleCloseForm}>Back</button>\n                    </form>\n                    }\n                </div>\n                <SidebarFilms films={ props.films } baseUrl={'/edit'}/>\n            </div>\n        </div>\n    )\n}\n\nEditFilm.propTypes = {\n    updateFilm: PropTypes.func.isRequired,\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nexport default withFilmsData()(EditFilm);"],"sourceRoot":""}