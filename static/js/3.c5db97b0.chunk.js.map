{"version":3,"sources":["js/actions/films.js","js/helpers/withFilmsData.js","js/components/dashboard/itemFilm.js","js/components/dashboard/dashboard.js"],"names":["updateFilm","film","type","types","payload","fetchFilms","dispatch","axios","get","concat","process","then","result","films","data","Search","catch","err","error","response","Error","withFilmsData","countShowFilms","WrappedComponent","mapDispatchToProps","connect","state","slice","isFilmsLoading","errorLoadFilms","props","useEffect","length","react_default","a","createElement","className","role","Object","assign","__webpack_require__","d","__webpack_exports__","ItemFilm","_ref","filmData","src","Poster","alt","Title","Year","Link","to","imdbID","DashboardWithFilmsData","map","item","itemFilm","key"],"mappings":"6IAoBO,SAASA,EAAYC,GACxB,MAAO,CACHC,KAAMC,IACNC,QAASH,GAGV,SAASI,IACZ,OAAO,SAAAC,GAEH,OADAA,EAxBG,CACHJ,KAAMC,MAwBCI,IAAMC,IAAN,mCAAAC,OAA6CC,WAA7C,YACFC,KAAM,SAAAC,GAtBnB,IAA8BC,EAuBdP,GAvBcO,EAuBiBD,EAAOE,KAAKC,OAtBhD,CACHb,KAAMC,IACNC,QAASS,OAsBJG,MAAO,SAAAC,GAnBpB,IAA6BC,EAoBbZ,GApBaY,EAoBiBD,EAAIE,SAASL,KAAKM,MAnBrD,CACHlB,KAAMC,IACNC,QAASc,QCZF,SAASG,EAAeC,GACnC,OAAO,SAAUC,GA+Bb,IASMC,EAAqB,CACvBnB,aACAL,cAEJ,OAAOyB,YAbiB,SAAAC,GACpB,IAAIb,EAAQa,EAAMb,MAAMA,MAExB,OADIS,IAAiBT,EAAQA,EAAMc,MAAM,EAAGL,EAAiB,IACtD,CACHT,QACAe,eAAgBF,EAAMb,MAAMe,eAC5BC,eAAgBH,EAAMb,MAAMgB,iBAOJL,EAAzBC,CA3CP,SAAwBK,GACpBC,oBAAW,WACHD,EAAMjB,MAAMmB,QAAU,GAAIF,EAAMzB,cACrC,IAHyB,IAIpBQ,EAAsDiB,EAAtDjB,MAAOe,EAA+CE,EAA/CF,eAAgBC,EAA+BC,EAA/BD,eAAgB7B,EAAe8B,EAAf9B,WAC/C,OACIiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACTR,GAAkBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAAgCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAC9EP,GAAkBI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,KAAK,SAAUR,KAC5FD,GACHK,EAAAC,EAAAC,cAACZ,EAADe,OAAAC,OAAA,GACST,EADT,CAEIjB,MAAQA,EACRb,WAAYA,SApBpCwC,EAAAC,EAAAC,EAAA,sBAAArB,gFCmCesB,MA/Bf,SAAAC,GAAgC,IAAXC,EAAWD,EAAXC,SACjB,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBU,IAAMD,EAASE,OAASC,IAAI,SACpEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAgBS,EAASI,OACvChB,EAAAC,EAAAC,cAAA,SAAKU,EAASK,OAElBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAE,SAAA3C,OAAYoC,EAASQ,QAAUjB,UAAU,wBAC7CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBCezC,IAAMkB,EAAyBjC,YAAe,EAAfA,CA1B/B,SAAAuB,GAAiC,IAAV/B,EAAU+B,EAAV/B,MAMnB,OACIoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACTvB,EAAM0C,IARpB,SAAuBC,GACnB,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,CACHC,IAAKF,EAAKH,OACVR,SAAUW,UAuBPF","file":"static/js/3.c5db97b0.chunk.js","sourcesContent":["import * as types from '../constants/films';\nimport axios from 'axios';\n\nfunction requestFilms() {\n    return {\n        type: types.FETCH_FILMS_REQUEST\n    }\n}\nfunction requestFilmsSuccess( films ) {\n    return {\n        type: types.FETCH_FILMS_SUCCESS,\n        payload: films\n    }\n}\nfunction requestFilmsFailed( error ) {\n    return {\n        type: types.FETCH_FILMS_FAILED,\n        payload: error\n    }\n}\nexport function updateFilm( film ) {\n    return {\n        type: types.UPDATE_FILM,\n        payload: film\n    }\n}\nexport function fetchFilms() {\n    return dispatch => {\n        dispatch( requestFilms() );\n        return axios.get(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=game`)\n            .then( result => {\n                dispatch( requestFilmsSuccess( result.data.Search ) );\n            })\n            .catch( err => {\n                dispatch( requestFilmsFailed( err.response.data.Error ));\n            })\n    }\n}","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFilms, updateFilm } from '../actions/films';\n\nexport default function withFilmsData( countShowFilms ) {\n    return function (WrappedComponent) {\n        function WithFilmsData( props ) {\n            useEffect( () => {\n                if( props.films.length <= 0 ) props.fetchFilms();\n            }, []);\n            const { films, isFilmsLoading, errorLoadFilms, updateFilm } = props;\n            return (\n                <div className=\"row\">\n                    { isFilmsLoading && <div className=\"fa-2x spinner-absolute-center\"><i className=\"fas fa-spinner fa-spin\"/></div> }\n                    { errorLoadFilms && <div className=\"col-12\"><div className=\"alert alert-danger\" role=\"alert\">{ errorLoadFilms }</div></div>}\n                    { !isFilmsLoading &&\n                    <WrappedComponent\n                        { ...props }\n                        films={ films }\n                        updateFilm={updateFilm}/>\n                    }\n                </div>\n            )\n        }\n        WithFilmsData.propTypes = {\n            films: PropTypes.arrayOf(PropTypes.shape({\n                Poster: PropTypes.string.isRequired,\n                Title: PropTypes.string.isRequired,\n                Year: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.string\n                ]).isRequired\n            })),\n            isFilmsLoading: PropTypes.bool.isRequired,\n            errorLoadFilms: PropTypes.string\n        };\n        const mapStateToProps = state => {\n            let films = state.films.films;\n            if( countShowFilms ) films = films.slice(0, countShowFilms + 1);\n            return {\n                films,\n                isFilmsLoading: state.films.isFilmsLoading,\n                errorLoadFilms: state.films.errorLoadFilms\n            }\n        }\n        const mapDispatchToProps = {\n            fetchFilms,\n            updateFilm,\n        }\n        return connect(mapStateToProps, mapDispatchToProps)(WithFilmsData);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction ItemFilm ({ filmData }){\n    return (\n        <div className=\"col-sm-6 col-md-4 col-lg-3 item-film-card\">\n            <div className=\"item-film-card__content\">\n                <img className=\"item-field-card__image\" src={ filmData.Poster } alt=\"Card\"/>\n                <div className=\"item-field-card__body\">\n                    <div>\n                        <h5 className=\"body__title\">{ filmData.Title }</h5>\n                        <p>{ filmData.Year }</p>\n                    </div>\n                    <div className=\"item-field-card__buttons\">\n                        <Link to={`/edit/${ filmData.imdbID}`} className=\"item-field-card__btn\">\n                            <i className=\"fas fa-pen\"/>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nItemFilm.propTypes = {\n    filmData: PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    })\n};\nexport default ItemFilm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData';\nimport ItemFilm from './itemFilm';\n\nfunction Dashboard ( { films } ) {\n    function mapFilmsData( item ) {\n        return <ItemFilm\n            key={item.imdbID}\n            filmData={item}/>\n    }\n    return (\n        <div className=\"col-12\">\n            <div className=\"row\">\n                { films.map( mapFilmsData ) }\n            </div>\n        </div>\n    )\n}\n\nDashboard.propTypes = {\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nconst DashboardWithFilmsData = withFilmsData( 5 )( Dashboard );\nexport default DashboardWithFilmsData;\n"],"sourceRoot":""}