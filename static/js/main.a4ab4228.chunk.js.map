{"version":3,"sources":["js/constants/films.js","js/reducers/films.js","js/reducers/index.js","js/store/index.js","js/components/common/header.js","js/components/common/footer.js","js/actions/films.js","js/helpers/withFilmsData.js","js/components/listOfFilms/itemFilm.js","js/components/listOfFilms/listOfFilms.js","js/components/dashboard/itemFilm.js","js/components/dashboard/dashboard.js","js/components/common/sidebarFilms.js","js/components/editFilm/editFilm.js","js/components/filmInfo/filmInfo.js","js/helpers/useLoadDetailFilmData.js","js/components/common/home.js","js/App.js","serviceWorker.js","index.js"],"names":["FETCH_FILMS_REQUEST","FETCH_FILMS_SUCCESS","FETCH_FILMS_FAILED","UPDATE_FILM","initialState","films","isFilmsLoading","errorLoadFilms","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","map","film","imdbID","createStore","rootReducer","applyMiddleware","thunk","Header","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","to","exact","Footer","updateFilm","fetchFilms","dispatch","axios","get","concat","process","then","result","data","Search","catch","err","error","response","Error","withFilmsData","countShowFilms","WrappedComponent","WithFilmsData","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","_this$props","role","assign","Component","mapDispatchToProps","connect","slice","ItemFilm","_ref","filmData","index","scope","Title","Year","Link","ListOfFilms","mapFilmsData","item","itemFilm","ListOfFilmsWithFilmsData","src","Poster","alt","Dashboard","dashboard_itemFilm","DashboardWithFilmsData","SidebarFilms","baseUrl","EditFilm","_this","call","findFilm","find","setState","isFilmNotFound","handleChangeForm","e","_e$target","target","name","formErrors","defineProperty","handleSubmitForm","preventDefault","_this$state","history","push","handleCloseForm","goBack","match","params","prevProps","_this$state2","onSubmit","htmlFor","onChange","classNames","is-invalid","style","marginRight","onClick","sidebarFilms","_useLoadDetailFilmDat","filmId","_useState","useState","isFilmLoading","errorLoadFilm","_useState2","slicedToArray","loadData","setLoadData","useEffect","sourceAxios","CancelToken","source","cancelToken","token","isCancel","console","cancel","useLoadDetailFilmData","maxWidth","Actors","Genre","Awards","Country","Runtime","Website","Home","App","es","store","BrowserRouter","basename","Switch","Route","path","component","FilmInfo","Boolean","window","location","hostname","ReactDOM","render","js_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4ab4228.chunk.js","sourcesContent":["export const FETCH_FILMS_REQUEST = \"FETCH_FILMS_REQUEST\"\nexport const FETCH_FILMS_SUCCESS = \"FETCH_FILMS_SUCCESS\"\nexport const FETCH_FILMS_FAILED = \"FETCH_FILMS_FAILED\"\nexport const UPDATE_FILM = \"UPDATE_FILM\"","import * as types from '../constants/films';\n\nconst initialState = {\n    films: [],\n    isFilmsLoading: false,\n    errorLoadFilms: null\n}\n\nexport default function films ( state = initialState, action ) {\n    switch (action.type) {\n        case types.FETCH_FILMS_REQUEST:\n            return { ...state, isFilmsLoading: true };\n        case types.FETCH_FILMS_FAILED:\n            return { ...state, isFilmsLoading: false, errorLoadFilms: action.payload };\n        case types.FETCH_FILMS_SUCCESS:\n            return { ...state, isFilmsLoading: false, errorLoadFilms: null, films: action.payload };\n        case types.UPDATE_FILM:\n            let films = state.films.map( film => {\n                if( action.payload.imdbID === film.imdbID ) return action.payload;\n                else return film;\n            });\n            return { ...state, films };\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport films from './films';\n\nexport default combineReducers({\n    films,\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index'\n\nexport default createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n)","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Header () {\n    return(\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <span className=\"navbar-brand\" href=\"#\">Films App</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <div className=\"navbar-nav\">\n                        <NavLink to=\"/\" exact className=\"nav-item nav-link\">Home</NavLink>\n                        <NavLink to=\"/dashboard/\" className=\"nav-item nav-link\">Dashboard</NavLink>\n                        <NavLink to=\"/list/\" className=\"nav-item nav-link\">List</NavLink>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    )\n}","import React from 'react';\nexport default function Footer () {\n    return(\n        <footer>\n            <p className=\"text-center\">© 2018 Copyright</p>\n        </footer>\n    )\n}","import * as types from '../constants/films';\nimport axios from 'axios';\n\nfunction requestFilms() {\n    return {\n        type: types.FETCH_FILMS_REQUEST\n    }\n}\nfunction requestFilmsSuccess( films ) {\n    return {\n        type: types.FETCH_FILMS_SUCCESS,\n        payload: films\n    }\n}\nfunction requestFilmsFailed( error ) {\n    return {\n        type: types.FETCH_FILMS_FAILED,\n        payload: error\n    }\n}\nexport function updateFilm( film ) {\n    return {\n        type: types.UPDATE_FILM,\n        payload: film\n    }\n}\nexport function fetchFilms() {\n    return dispatch => {\n        dispatch( requestFilms() );\n        return axios.get(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=game`)\n            .then( result => {\n                dispatch( requestFilmsSuccess( result.data.Search ) );\n            })\n            .catch( err => {\n                dispatch( requestFilmsFailed( err.response.data.Error ));\n            })\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFilms, updateFilm } from '../actions/films';\n\nexport default function withFilmsData( countShowFilms ) {\n    return function (WrappedComponent) {\n        class WithFilmsData extends Component {\n            componentDidMount(){\n                if( this.props.films.length <= 0 ) this.props.fetchFilms();\n            }\n            render() {\n                const { films, isFilmsLoading, errorLoadFilms, updateFilm } = this.props;\n                return (\n                    <div className=\"row\">\n                        { isFilmsLoading && <div className=\"fa-2x spinner-absolute-center\"><i className=\"fas fa-spinner fa-spin\"/></div> }\n                        { errorLoadFilms && <div className=\"col-12\"><div className=\"alert alert-danger\" role=\"alert\">{ errorLoadFilms }</div></div>}\n                        { !isFilmsLoading &&\n                            <WrappedComponent\n                                { ...this.props }\n                                films={ films }\n                                updateFilm={updateFilm}/>\n                        }\n                    </div>\n                )\n            }\n        }\n        WithFilmsData.propTypes = {\n            films: PropTypes.arrayOf(PropTypes.shape({\n                Poster: PropTypes.string.isRequired,\n                Title: PropTypes.string.isRequired,\n                Year: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.string\n                ]).isRequired\n            })),\n            isFilmsLoading: PropTypes.bool.isRequired,\n            errorLoadFilms: PropTypes.string\n        };\n        const mapStateToProps = state => {\n            let films = state.films.films;\n            if( countShowFilms ) films = films.slice(0, countShowFilms + 1);\n            return {\n                films,\n                isFilmsLoading: state.films.isFilmsLoading,\n                errorLoadFilms: state.films.errorLoadFilms\n            }\n        }\n        const mapDispatchToProps = {\n            fetchFilms,\n            updateFilm,\n        }\n        return connect(mapStateToProps, mapDispatchToProps)(WithFilmsData);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction ItemFilm ({ filmData, index }){\n    return (\n        <tr>\n            <th scope=\"row\">{ index }</th>\n            <td>{ filmData.Title }</td>\n            <td>{ filmData.Year }</td>\n            <td>\n                <Link to={`/edit/${filmData.imdbID}`}><i className=\"fas fa-pen\"/></Link>\n                <Link to={`/film-info/${filmData.imdbID}`}><i className=\"fas fa-eye\"/></Link>\n            </td>\n        </tr>\n    )\n}\nItemFilm.propTypes = {\n    index: PropTypes.number.isRequired,\n    filmData: PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    })\n};\nexport default ItemFilm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData';\nimport ItemFilm from './itemFilm';\n\nclass ListOfFilms extends Component {\n    mapFilmsData = ( item, index ) => {\n        return <ItemFilm\n                    key={item.imdbID}\n                    index={index + 1}\n                    filmData={item}/>\n    }\n    render() {\n        const { films } = this.props;\n        return (\n            <div className=\"col-12\">\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Year</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    { films.map( this.mapFilmsData ) }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\nListOfFilms.propTypes = {\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nconst ListOfFilmsWithFilmsData = withFilmsData( 10 )( ListOfFilms );\nexport default ListOfFilmsWithFilmsData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction ItemFilm ({ filmData }){\n    return (\n        <div className=\"col-sm-6 col-md-4 col-lg-3 item-film-card\">\n            <div className=\"item-film-card__content\">\n                <img className=\"item-field-card__image\" src={ filmData.Poster } alt=\"Card\"/>\n                <div className=\"item-field-card__body\">\n                    <div>\n                        <h5 className=\"body__title\">{ filmData.Title }</h5>\n                        <p>{ filmData.Year }</p>\n                    </div>\n                    <div className=\"item-field-card__buttons\">\n                        <Link to={`/edit/${ filmData.imdbID}`} className=\"item-field-card__btn\">\n                            <i className=\"fas fa-pen\"/>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nItemFilm.propTypes = {\n    filmData: PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    })\n};\nexport default ItemFilm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData';\nimport ItemFilm from './itemFilm';\n\nclass Dashboard extends Component {\n    mapFilmsData = ( item ) => {\n        return <ItemFilm\n                    key={item.imdbID}\n                    filmData={item}/>\n    }\n    render() {\n        const { films } = this.props;\n        return (\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    { films.map( this.mapFilmsData ) }\n                </div>\n            </div>\n        )\n    }\n}\nDashboard.propTypes = {\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nconst DashboardWithFilmsData = withFilmsData( 5 )( Dashboard );\nexport default DashboardWithFilmsData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nfunction SidebarFilms ({ films, baseUrl }){\n    function handleMapFilms(film) {\n        return(\n            <li key={film.imdbID}>\n                <NavLink to={`${baseUrl}/${film.imdbID}`}>{ film.Title }</NavLink>\n            </li>\n        )\n    }\n    return (\n        <div className=\"col-md-4 sidebar-films\">\n            <h4 className=\"sidebar-films__title\">All films</h4>\n            <ul>\n                { films.map( handleMapFilms )}\n            </ul>\n        </div>\n    )\n}\nSidebarFilms.propTypes = {\n    baseUrl: PropTypes.string.isRequired,\n    films: PropTypes.arrayOf(PropTypes.shape({\n        Title: PropTypes.string.isRequired,\n        imdbID: PropTypes.string.isRequired\n    }))\n};\nexport default SidebarFilms;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData'\nimport classNames from \"classnames\";\nimport SidebarFilms from '../common/sidebarFilms';\n\nclass EditFilm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filmData: null,\n            isFilmNotFound: false,\n            formErrors: {\n                Title: null,\n                Year: null,\n            }\n        }\n    }\n    componentDidMount(){\n        const { id } = this.props.match.params;\n        this.findFilm(id);\n    }\n    componentDidUpdate(prevProps){\n        if( prevProps.match.params.id !== this.props.match.params.id) {\n            this.findFilm(this.props.match.params.id);\n        }\n    }\n    findFilm = id => {\n        let { films } = this.props;\n        let filmData = films.find( film => film.imdbID === id );\n        this.setState({\n            filmData,\n            isFilmNotFound: !filmData\n        })\n    }\n    handleChangeForm = e => {\n        let { name, value } = e.target,\n            formErrors = { ...this.state.formErrors };\n        if(!value) formErrors[name] = \"Field is required.\";\n        else formErrors[name] = null;\n        this.setState({\n            formErrors,\n            filmData: { ...this.state.filmData, [name]: value }\n        });\n    }\n    handleSubmitForm = e => {\n        e.preventDefault();\n        let { filmData, formErrors } = this.state;\n        if( !formErrors.Title && !formErrors.Year ) {\n            this.props.updateFilm(filmData);\n            this.props.history.push('/dashboard');\n        }\n    }\n    handleCloseForm = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const { filmData, isFilmNotFound, formErrors } = this.state;\n        const { films } = this.props;\n        return (\n            <div className=\"col-12\">\n                { isFilmNotFound && <div className=\"\"><div className=\"alert alert-danger\" role=\"alert\">Film not found.</div></div>}\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        {filmData &&\n                            <form onSubmit={this.handleSubmitForm}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\">Title</label>\n                                    <input type=\"text\"\n                                           onChange={this.handleChangeForm}\n                                           value={filmData.Title}\n                                           className={classNames('form-control', {'is-invalid': formErrors.Title})}\n                                           name=\"Title\"\n                                           id=\"title\"/>\n                                    {formErrors.Title && <div className=\"invalid-feedback\">{formErrors.Title}</div>}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"year\">Year</label>\n                                    <input type=\"text\"\n                                           onChange={this.handleChangeForm}\n                                           value={filmData.Year}\n                                           className={classNames('form-control', {'is-invalid': formErrors.Year})}\n                                           name=\"Year\"\n                                           id=\"year\"/>\n                                    {formErrors.Year && <div className=\"invalid-feedback\">{formErrors.Year}</div>}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\" style={{marginRight: '10px'}}>Save</button>\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleCloseForm}>Back</button>\n                            </form>\n                        }\n                    </div>\n                    <SidebarFilms films={ films } baseUrl={'/edit'}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nEditFilm.propTypes = {\n    updateFilm: PropTypes.func.isRequired,\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nexport default withFilmsData()(EditFilm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withFilmsData from '../../helpers/withFilmsData';\nimport useLoadDetailFilmData from '../../helpers/useLoadDetailFilmData';\nimport SidebarFilms from '../common/sidebarFilms';\n\nexport function FilmInfo ({ films, match }){\n    let { isFilmLoading, filmData, errorLoadFilm } = useLoadDetailFilmData(match.params.id);\n    return (\n        <div className=\"col-12\">\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    { isFilmLoading && <div className=\"fa-2x spinner-absolute-center\"><i className=\"fas fa-spinner fa-spin\"/></div> }\n                    { errorLoadFilm && <div className=\"col-12\"><div className=\"alert alert-danger\" role=\"alert\">{ errorLoadFilm }</div></div>}\n                    { !isFilmLoading && filmData &&\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h3>{ filmData.Title }</h3>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <img src={ filmData.Poster } alt=\"\" style={{ maxWidth: '100%'}}/>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <ul>\n                                    <li><b>Actors: </b>{ filmData.Actors }</li>\n                                    <li><b>Genre: </b>{ filmData.Genre }</li>\n                                    <li><b>Awards: </b>{ filmData.Awards }</li>\n                                    <li><b>Country: </b>{ filmData.Country }</li>\n                                    <li><b>Year: </b>{ filmData.Year }</li>\n                                    <li><b>Runtime: </b>{ filmData.Runtime }</li>\n                                    <li><a href={ filmData.Website } target=\"_blank\">website</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <SidebarFilms films={ films } baseUrl={'/film-info'}/>\n            </div>\n        </div>\n    )\n}\n\nFilmInfo.propTypes = {\n    films: PropTypes.arrayOf(PropTypes.shape({\n        imdbID: PropTypes.string.isRequired,\n        Poster: PropTypes.string.isRequired,\n        Title: PropTypes.string.isRequired,\n        Year: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired\n    }))\n};\nexport default withFilmsData()(FilmInfo);","import { useState, useEffect } from 'react';\nimport axios from \"axios/index\";\n\nexport default function useLoadDetailFilmData( filmId ) {\n    const [ loadData, setLoadData ] = useState({\n        filmData: null,\n        isFilmLoading: true,\n        errorLoadFilm: ''\n    });\n    useEffect( () => {\n        const sourceAxios = axios.CancelToken.source();\n        setLoadData({ isFilmLoading: true, filmData: null, errorLoadFilm: '' });\n        axios.get( `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&i=${filmId}`,\n            { cancelToken: sourceAxios.token }\n        )\n            .then( result => {\n                if( result.data.Error ) {\n                    setLoadData({ isFilmLoading: false, filmData: null, errorLoadFilm: result.data.Error });\n                }\n                else setLoadData({ isFilmLoading: false, filmData: result.data, errorLoadFilm: '' });\n            })\n            .catch( error => {\n                if (axios.isCancel(error)) console.error('Request canceled', error);\n                else setLoadData({ isFilmLoading: false, filmData: null, errorLoadFilm: error.response.data.Error });\n            })\n        return () => sourceAxios.cancel();\n    }, [filmId] );\n\n    return loadData;\n}","import React from 'react';\n\nexport default function Home () {\n    return(\n        <div>Home page</div>\n    )\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from './store/index';\nimport Header from './components/common/header';\nimport Footer from './components/common/footer';\nimport ListOfFilms from './components/listOfFilms/listOfFilms';\nimport Dashboard from './components/dashboard/dashboard';\nimport EditFilm from './components/editFilm/editFilm';\nimport FilmInfo from './components/filmInfo/filmInfo';\nimport Home from './components/common/home';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={ store }>\n                <Router basename=\"/react-app-films\">\n                    <div className=\"app-container\">\n                        <Header/>\n                        <main>\n                            <div className=\"container\">\n                                <Switch>\n                                    <Route path=\"/\" exact component={Home} />\n                                    <Route path=\"/dashboard\" component={Dashboard} />\n                                    <Route path=\"/list\" component={ListOfFilms} />\n                                    <Route path=\"/edit/:id\" component={EditFilm} />\n                                    <Route path=\"/film-info/:id\" component={FilmInfo} />\n                                </Switch>\n                            </div>\n                        </main>\n                        <Footer/>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}